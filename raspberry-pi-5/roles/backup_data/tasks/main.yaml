# Backup Seafile using Restic backup
#
# https://manual.seafile.com/12.0/administration/backup_recovery/
#
- name: Backup Seafile
  # Blocks create logical groups of tasks. Blocks also offer ways to handle task errors,
  # similar to exception handling in many programming languages.
  block:
    # We'll create directories for DB backups
    - name: Create directory structure for Seafile DB backup
      # Manage files and file properties
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ seafile_db_backup_dir }}"
      become: true # we must use `become` as `/opt` is only accessible to `root` user

    - name: Copy backup shell script (backup-seafile.sh.j2)
      # Template a file out to a target host
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html
      ansible.builtin.template:
        src: backup-seafile.sh.j2
        dest: "{{ seafile_db_backup_dir }}/backup-seafile.sh"
        mode: "0750"
      become: true # we must use `become` as `/opt` is only accessible to `root` user

    - name: Copy restore shell script (restore-seafile-backup.sh.j2)
      # Template a file out to a target host
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html
      ansible.builtin.template:
        src: restore-seafile-backup.sh.j2
        dest: "{{ seafile_db_backup_dir }}/restore-seafile-backup.sh"
        mode: "0750"
      become: true # we must use `become` as `/opt` is only accessible to `root` user

    - name: Copy backup shell script (backup-immich.sh.j2)
      # Template a file out to a target host
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html
      ansible.builtin.template:
        src: backup-immich.sh.j2
        dest: "{{ seafile_db_backup_dir }}/backup-immich.sh"
        mode: "0750"
      become: true # we must use `become` as `/opt` is only accessible to `root` user

    - name: Install Restic
      # Manages apt-packages
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html
      ansible.builtin.apt:
        name: restic
        state: present
      become: true # we must use `become` as only root can `apt install`

    - name: Copy service-account key JSON file
      # Copy files to remote locations
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
      ansible.builtin.copy:
        src: "{{ backup_google_service_account_key_json_path }}"
        dest: "{{ seafile_db_backup_dir }}/service-account-key.json"
        mode: "0640"
      become: true # we must use `become` as `/opt` is only accessible to `root` user

    - name: Print HOWTO setup instructions
      ansible.builtin.debug:
        msg:
          - "AWARE"
          - "For the very first time, you need to init restic repository."
          - "Login to your rpi machine and check `{{ seafile_db_backup_dir }}/backup-seafile.sh` file for info."

    - name: Schedule a cron job to backup Seafile periodically (daily at 20:45)
      # Manage cron.d and crontab entries
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/cron_module.html
      #
      # To check backup logs use:
      # $ journalctl -r -t seafilebackup.cron
      #
      ansible.builtin.cron:
        name: "Backup Seafile"
        disabled: "{{ backup_disable_backups }}"
        minute: "45"
        hour: "20"
        user: root
        job: "{ cd {{ seafile_db_backup_dir }} && ./backup-seafile.sh | logger -t seafilebackup.cron -p 6; } 2>&1 | logger -t seafilebackup.cron -p 3"
        state: "present"
      become: true # we must use `become` as we are setting `cron` to `root` user

    - name: Schedule a cron job to backup Immich periodically (daily at 5:00)
      # Manage cron.d and crontab entries
      # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/cron_module.html
      #
      # To check backup logs use:
      # $ journalctl -r -t immichbackup.cron
      #
      ansible.builtin.cron:
        name: "Backup Immich"
        disabled: "{{ backup_disable_backups }}"
        minute: "0"
        hour: "5"
        user: root
        job: "{ cd {{ seafile_db_backup_dir }} && ./backup-immich.sh | logger -t immichbackup.cron -p 6; } 2>&1 | logger -t immichbackup.cron -p 3"
        state: "present"
      become: true # we must use `become` as we are setting `cron` to `root` user
